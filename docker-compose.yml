services:
  postgres:
    image: postgres:15
    container_name: webapp-postgres
    environment:
      POSTGRES_DB: webapp
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - webapp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d webapp"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: webapp-backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: webapp
      DB_USER: user
      DB_PASSWORD: password
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - webapp-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: webapp-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - webapp-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  webapp-network:
    driver: bridge
